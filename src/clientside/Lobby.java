package clientside;

import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public class Lobby extends javax.swing.JPanel {
    
    private Listen listen;
    
    public Lobby() {
        initComponents();
    }
    
    public void startListening() {
        listen = new Listen();
        listen.start();
    }
    
    public void loadRoster() {
        String names = "<html>";
        for (int i = 0; i < ClientSide.getList().size(); i++) {
            if (i == 0) {
                names += ClientSide.getList().get(i).getName();
            } else {
                names += "<br/>" + ClientSide.getList().get(i).getName();
            }
        }
        names += "</html>";
        namesJLabel.setText(names);
    }
    
    public void newUser(String name) {
        ClientSide.getList().add(new User(name));
        loadRoster();
    }
    
    public void userQuit(String name) {
        for (User user : ClientSide.getList()) {
            if (user.equals(name)) {
                ClientSide.getList().remove(user);
                loadRoster();
                return;
            }
        }
//        String[] names = namesJLabel.getText().replace("<html>", "").replace("</html>", "").split("<br/>");
//        String text = "<html>";
//        for (String s : names) {
//            if (!s.equals(name)) {
//                if (text.length() > 6) {
//                    text += "<br/>" + s;
//                } else {
//                    text += s;
//                }
//            }
//        }
//        text += "</html>";
//        namesJLabel.setText(text);
    }
    
    class Listen extends Thread {
        
        private final AtomicBoolean running = new AtomicBoolean(false);
        
        public void stop1() {
            running.set(false);
        }
        
        @Override
        public void run() {
            running.set(true);
            try {
                while (running.get()) {
                    String input = ClientSide.getIn().readLine();
                    if (input.startsWith("newuser,")) {
                        newUser(input.split(",")[1]);
                    } else if (input.startsWith("quit,")) {
                        userQuit(input.split(",")[1]);
                    }
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        namesJLabel = new javax.swing.JLabel();
        lobbyLabel = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(133, 220, 186));

        namesJLabel.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        namesJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namesJLabel.setText("list of names");
        namesJLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lobbyLabel.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        lobbyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lobbyLabel.setText("Players in Lobby");

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(lobbyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namesJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(quitButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lobbyLabel)
                .addGap(18, 18, 18)
                .addComponent(namesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quitButton)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        ClientSide.write("quit");
        ClientSide.disconnect();
        listen.stop1();
        ClientSide.getHome().showPanel(0);
    }//GEN-LAST:event_quitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lobbyLabel;
    private javax.swing.JLabel namesJLabel;
    private javax.swing.JButton quitButton;
    // End of variables declaration//GEN-END:variables
}
