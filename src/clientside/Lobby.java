package clientside;

import java.io.IOException;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Lobby extends javax.swing.JPanel {
    
    private Listen listen;
    
    public Lobby() {
        initComponents();
    }
    
    public void startListening() {
        listen = new Listen();
        listen.start();
    }
    
    public void loadRoster() {
        String names = "<html>";
        for (int i = 0; i < ClientSide.getList().size(); i++) {
            if (ClientSide.getList().get(i).isMainPlayer()) names += "<b>";
            if (i == 0) {
                names += ClientSide.getList().get(i).getName();
            } else {
                names += "<br/>" + ClientSide.getList().get(i).getName();
            }
            if (ClientSide.getList().get(i).isMainPlayer()) names += "</b>";
        }
        names += "</html>";
        namesJLabel.setText(names);
    }
    
    public void newUser(String name) {
        ClientSide.getList().add(new User(name));
        loadRoster();
    }
    
    public void userQuit(String name) {
        for (User user : ClientSide.getList()) {
            if (user.equals(name)) {
                ClientSide.getList().remove(user);
                loadRoster();
                return;
            }
        }
    }
    
    class Listen extends Thread {
        
        private final AtomicBoolean running = new AtomicBoolean(false);
        
        public void stop1() {
            running.set(false);
        }
        
        @Override
        public void run() {
            running.set(true);
            try {
                while (running.get()) {
                    String input = ClientSide.getIn().readLine();
                    if (input.startsWith("newuser,")) {
                        newUser(input.split(",")[1]);
                    } else if (input.startsWith("quit,")) {
                        userQuit(input.split(",")[1]);
                    } else if (input.equals("start")) {
                        JPanel p = ClientSide.getHome().getList().get(2);
                        if (p instanceof Poker) {
                            ((Poker)p).loadPlayers();
                            ClientSide.getHome().showPanel(2);
                        }
                        stop1();
                    } else if (input.equals("fewplayers")) {
                        JOptionPane.showMessageDialog(ClientSide.getHome(), "Not Enough Players");
                    }
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        namesJLabel = new javax.swing.JLabel();
        lobbyLabel = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(133, 220, 186));

        namesJLabel.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        namesJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namesJLabel.setText("list of names");
        namesJLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lobbyLabel.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        lobbyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lobbyLabel.setText("Players in Lobby");

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namesJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startButton)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lobbyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(299, 299, 299))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lobbyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(namesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitButton)
                    .addComponent(startButton))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        ClientSide.write("quit");
        ClientSide.disconnect();
        listen.stop1();
        ClientSide.getHome().showPanel(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        ClientSide.write("start");
    }//GEN-LAST:event_startButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lobbyLabel;
    private javax.swing.JLabel namesJLabel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
